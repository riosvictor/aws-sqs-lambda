service: sls-sqs-ts-example
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  environment:
    FIFO_QUEUE_ARN: ${self:custom.queueARN}
    SQS_OFFLINE_ENDPOINT: ${self:custom.serverless-offline-sqs.endpoint}
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}

functions:
  publisher:
    handler: ./src/publisher.handler
    events:
      - httpApi:
          path: /produce-message
          method: post
  consumer:
    handler: ./src/consumer.handler
    events:
      - sqs: ${self:custom.queueARN}

resources:
  Resources:
    myQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: ${self:service}-${sls:stage}-queue
        ContentBasedDeduplication: false
        FifoQueue: true

custom:
  serverless-offline:
    httpPort: 8080
  esbuild:
    minify: false
    sourcemap: linked
    watch:
      pattern: 'src/**/*.ts'
      ignore: 'node_modules/**/*'
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:9324
    region: ${self:provider.region}
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false
  queueARN: arn:aws:sqs:${aws:region}:${env:AWS_ACCOUNT_ID}:myqueue

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline-sqs
  - serverless-offline